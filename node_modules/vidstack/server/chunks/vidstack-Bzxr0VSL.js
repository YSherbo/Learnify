import { i as isVideoSrc, a as isDASHSupported, b as isDASHSrc, d as isHLSSupported, e as isHLSSrc } from './vidstack-B35u_Yz6.js';

class VideoProviderLoader {
  constructor() {
    this.name = "video";
  }
  canPlay(src) {
    if (!isVideoSrc(src))
      return false;
    return true;
  }
  mediaType() {
    return "video";
  }
  async load(ctx) {
    {
      throw Error("[vidstack] can not load video provider server-side");
    }
  }
}

class DASHProviderLoader extends VideoProviderLoader {
  constructor() {
    super(...arguments);
    this.name = "dash";
  }
  static {
    this.supported = isDASHSupported();
  }
  canPlay(src) {
    return DASHProviderLoader.supported && isDASHSrc(src);
  }
  async load(context) {
    {
      throw Error("[vidstack] can not load dash provider server-side");
    }
  }
}

class HLSProviderLoader extends VideoProviderLoader {
  constructor() {
    super(...arguments);
    this.name = "hls";
  }
  static {
    this.supported = isHLSSupported();
  }
  canPlay(src) {
    return HLSProviderLoader.supported && isHLSSrc(src);
  }
  async load(context) {
    {
      throw Error("[vidstack] can not load hls provider server-side");
    }
  }
}

export { DASHProviderLoader as D, HLSProviderLoader as H, VideoProviderLoader as V };
